# [PackageDev] target_format: plist, ext: tmLanguage
---
name: TaskJuggler
scopeName: source.tjp3
fileTypes: [tjp3]
# Arbitrary UUID, until I figure out where this is used.
uuid: 24341012-fbff-4468-926e-348ed6563de2

macros:
  ID: (?:\b[a-zA-Z_][a-zA-Z0-9_]*\b)
  stringDoubleQuoted: \"(?:[^\"\\]|\\.)+\"
  stringSingleQuoted: \'(?:[^\'\\]|\\.)+\'
  stringSingleLine: (?:{{stringDoubleQuoted}}|{{stringSingleQuoted}})
  endOfListAttribute: (?:(?<![,\s])\s*$)
  float: (?:\d+\.\d+)
  integer: (?:\d+)
  numeric: (?:{{float}}|{{integer}})
  durationUnits: (?:min|h|d|w|m|y)
  durationOffset: (?:[+-]\s*{{numeric}}\s*{{durationUnits}})
  timestampWithoutOffset: (?:\d\d\d\d-\d\d-\d\d(?:-\d\d:\d\d(?::\d\d)?)?(?:-[+-]\d\d\d\d)?)
  timestampWithOffset: (?:%\s*\{\s*{{timestampWithoutOffset}}\s*{{durationOffset}}\s*\})
  timestamp: (?:{{timestampWithoutOffset}}|{{timestampWithOffset}})
  positiveDurationOffset: (?:\+\s*{{numeric}}\s*{{durationUnits}})
  intervalRange: (?:\-\s*{{timestamp}}|{{positiveDurationOffset}})
  explicitInteral: (?:{{timestamp}}\s*{{intervalRange}})
  interval: (?:{{explicitInteral}}|{{timestamp}})


patterns:
- include: '#account'
- include: '#leaves'
- include: '#literals'
- include: '#shift'

repository:
  account:
    patterns:
    # Order matters: Multi-line pattern must preceded the single line version.
    - begin: '^\s*(account)\b\s*(?:({{ID}})\s+)?({{stringSingleLine}})\s*\{'
      end: '\}'
      beginCaptures:
        '1': { name: storage.type.account.tjp3 }
        '2': { name: entity.name.type.account.tjp3 }
        '3': { name: string.quoted.tjp3 }
      patterns:
        - include: '#account-inclusions'
    - match: '^\s*(account)\b\s*(?:({{ID}})\s+)?({{stringSingleLine}})'
      captures:
        '1': { name: storage.type.account.tjp3 }
        '2': { name: entity.name.type.account.tjp3 }
        '3': { name: string.quoted.tjp3 }

  account-inclusions:
    patterns:
      - include: '#literals'
      - include: '#flags'
      - include: '#credits'
      - include: '#aggregate'
      - include: '#account'

  aggregate:
    patterns:
      - match: '^\s*(aggregate)\s*(resources|tasks)'
        captures:
          '1': { name: storage.type.aggregate.tjp3 }
          '2': { name: constant.other.aggregate.tjp3 }

  credits:
    patterns:
      - begin: '^\s*(credits)\b'
        end: '{{endOfListAttribute}}'
        beginCaptures:
          '1': { name: storage.type.credits.tjp3 }
        patterns:
          - include: '#credits-inclusions'

  credits-inclusions:
    patterns:
      - include: '#literals'
      - include: '#string'
      - include: '#date'
      - include: '#numeric'

  date:
    patterns:
      - name: constant.numeric.date.tjp3
        match: '{{timestamp}}'

  flags:
    patterns:
      - begin: '^\s*(flags)\b'
        end: '{{endOfListAttribute}}'
        beginCaptures:
          '1': { name: storage.type.flags.tjp3 }
        patterns:
          - include: '#literals'
          - name: entity.name.type.flags.tjp3
            match: '{{ID}}'

  leaves:
    patterns:
      - begin: '^\s*(leaves)\b'
        end: '{{endOfListAttribute}}'
        beginCaptures:
          '1': { name: storage.type.leaves.tjp3 }
        patterns:
          - include: '#leaves-inclusions'

  leaves-inclusions:
    patterns:
      - match: '(?:project|annual|special|sick|unpaid|holiday|unemployed)'
        name: constant.language.leaves.tjp3
      - match: '{{ID}}'
        name: entity.name.type.leaves.tjp3
      - match: '{{interval}}'
        name: constant.numeric.interval.tjp3
      - include: '#literals'

  literals:
    patterns:
      - include: '#string'
      # Order matters: date must precede subsumbed numeric
      # TODO(move intervals to literals)
      - include: '#date'
      - include: '#numeric'

  numeric:
    patterns:
      - name: constant.numeric.tjp3
        match: '{{numeric}}'

  replace:
    patterns:
      - match: 'replace'
        name: storage.type.replace.tjp3

  shift:
    patterns:
    # Order matters: Multi-line pattern must preceded the single line version.
    - begin: '^\s*(shift)\b\s*(?:({{ID}})\s+)?({{stringSingleLine}})\s*\{'
      end: '\}'
      beginCaptures:
        '1': { name: storage.type.shift.tjp3 }
        '2': { name: entity.name.type.shift.tjp3 }
        '3': { name: string.quoted.tjp3 }
      patterns:
        - include: '#shift-inclusions'
    - match: '^\s*(shift)\b\s*(?:({{ID}})\s+)?({{stringSingleLine}})'
      captures:
        '1': { name: storage.type.shift.tjp3 }
        '2': { name: entity.name.type.shift.tjp3 }
        '3': { name: string.quoted.tjp3 }

  shift-inclusions:
    patterns:
      - include: '#leaves'
      - include: '#replace'
      - include: '#shift'
      - include: '#timezone'

  string:
    patterns:
      - name: string.quoted.tjp3
        match: '{{stringSingleLine}}'

  timezone:
    patterns:
      - match: '(timezone)\s*{{stringSingleLine}}'
        captures:
          '1': { name: storage.type.timezone.tjp3 }